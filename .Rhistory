#install.packages("remotes")
#remotes::install_github("IREA-CNR-MI/sprawl")
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
library(tidygraph)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
source('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/function_UO.R')
st_c    <- st_coordinates
st_coid <- st_centroid
litter <- read.csv('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-dataChennai.csv')
litter_p <- litter%>%
filter(master_material == 'PLASTIC')%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")%>%
st_transform('EPSG:32643')
chen_bdry <- st_read('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/gcc-divisions-latest.kml')
chen_bdry <- st_set_crs(chen_bdry, 4326)%>%
st_transform('EPSG:32643')
fishnet <-
st_make_grid(chen_bdry,
cellsize = 500,
square = TRUE) %>%
.[chen_bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
# reference: https://wiki.openstreetmap.org/wiki/Map_features#Entertainment,_Arts_&_Culture
amenity_wm <- c('waste_basket','waste_disposal','waste_transfer_station','recycling')
water<- c('canal','drain','ditch')
leisure <- c('park')
landuse <- c('commercial','residential','retail')
highway <- c('motorway','trunk','primary','secondary','tertiary','unclassified','residential')
act <- c('maxspeed')
amenity_food <- c('restaurant','pub','bar')
building <- ('apartments,')
india <- getbb(place_name = "india", format_out = "polygon")
bb_df <- getbb(place_name = "chennai india", format_out = "data.frame")
bdry <- bb_df$boundingbox
chen_bd <- c(80.4301860, 13.2436939, 80.1101860, 12.8236939)
water_point <- point_data(chen_bd, 'water',c('canal','drain','ditch'),'water')
water_net <- countfishnet(fishnet,water_point)
water_nn_net <- knnfishnet(fishnet,water_point,3)
st_as_s2(TRUE)
sf_use_s2(TRUE)
water_point <- point_data(chen_bd, 'water',c('canal','drain','ditch'),'water')
water_net <- countfishnet(fishnet,water_point)
water_nn_net <- knnfishnet(fishnet,water_point,3)
water_nn_net <- knnfishnet(fishnet,water_point,3)
View(knnfishnet)
vars_net <- water_point%>%
st_join(fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID,legend) %>%
summarize(count = n()) %>%
left_join(fishnet, ., by = "uniqueID") %>%
spread(legend, count, fill=0) %>%
dplyr::select(-`<NA>`) %>%
ungroup()
install.packages("glue")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("remotes")
#remotes::install_github("IREA-CNR-MI/sprawl")
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
library(tidygraph)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
source('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/function_UO.R')
st_c    <- st_coordinates
st_coid <- st_centroid
litter <- read.csv('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-dataChennai.csv')
litter_p <- litter%>%
filter(master_material == 'PLASTIC')%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")%>%
st_transform('EPSG:32643')
chen_bdry <- st_read('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/gcc-divisions-latest.kml')
chen_bdry <- st_set_crs(chen_bdry, 4326)%>%
st_transform('EPSG:32643')
fishnet <-
st_make_grid(chen_bdry,
cellsize = 500,
square = TRUE) %>%
.[chen_bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
# reference: https://wiki.openstreetmap.org/wiki/Map_features#Entertainment,_Arts_&_Culture
amenity_wm <- c('waste_basket','waste_disposal','waste_transfer_station','recycling')
water<- c('canal','drain','ditch')
leisure <- c('park')
landuse <- c('commercial','residential','retail')
highway <- c('motorway','trunk','primary','secondary','tertiary','unclassified','residential')
act <- c('maxspeed')
amenity_food <- c('restaurant','pub','bar')
building <- ('apartments,')
india <- getbb(place_name = "india", format_out = "polygon")
bb_df <- getbb(place_name = "chennai india", format_out = "data.frame")
bdry <- bb_df$boundingbox
chen_bd <- c(80.4301860, 13.2436939, 80.1101860, 12.8236939)
water_point <- point_data(chen_bd, 'water',c('canal','drain','ditch'),'water')
water_net <- countfishnet(fishnet,water_point)
water_nn_net <- knnfishnet(fishnet,water_point,3)
water_point <- point_data(chen_bd, 'water',c('canal','drain','ditch'),'water')
water_net <- countfishnet(fishnet,water_point)
water_nn_net <- knnfishnet(fishnet,water_point,3)
waste_point <- point_data(chen_bd, 'amenity',c('waste_basket','waste_disposal','waste_transfer_station','recycling'),'waste')
waste_net <- countfishnet(fishnet,waste_point)
waste_nn_net <- knnfishnet(fishnet,waste_point,3)
rstrt_point <- point_data(chen_bd, 'amenity',c('restaurant','pub','bar'),'restaurant')
rstrt_net <- countfishnet(fishnet,rstrt_point)
rstrt_nn_net <- knnfishnet(fishnet,rstrt_point,3)
road_point <- point_data(chen_bd, 'highway','residential','road')
road_net <- countfishnet(fishnet,road_point)
road_nn_net <- knnfishnet(fishnet,road_point,3)
View(avg_pop)
avg_pop[is.na(avg_pop)] <- 0
View(avg_pop)
final_net <-
left_join(final_net,st_drop_geometry(avg_pop), by="uniqueID")
View(avg_pop)
litter_net <- countfishnet(fishnet, litter_p)
final_net <-
left_join(litter_net, st_drop_geometry(water_nn_net), by="uniqueID")
final_net <-
left_join(final_net, st_drop_geometry(rstrt_nn_net), by="uniqueID")
final_net <-
left_join(final_net, st_drop_geometry(road_nn_net ), by="uniqueID")
final_net <- final_net%>%
rename(watr_nn = item.nn.x,
restaurant_nn = item.nn.y,
road_nn = item.nn)
final_net <-
left_join(final_net,st_drop_geometry(avg_pop), by="uniqueID")
final_net <-
left_join(final_net,st_drop_geometry(sum_pop), by="uniqueID")
View(final_net)
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
local_morans_rst <- localmoran(final_net$restaurant, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
local_morans_road <- localmoran(final_net$road, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
local_morans_wtr <- localmoran(final_net$water, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'sum pop')
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'sum_pop')
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'sum_pop')
local_morans_ap <- localmoran(final_net$avg_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'avg_pop')
final_net <- lm_col(final_net,local_morans_wtr)
final_net <- final_net%>% rename(wtr_sig = col_name, wtr_sig_dis = col_name_dis)
final_net <- lm_col(final_net,local_morans_road)
final_net <- final_net%>% rename(road_sig = col_name, road_sig_dis = col_name_dis)
final_net <- lm_col(final_net,local_morans_rst)
final_net <- final_net%>% rename(rst_sig = col_name, rst_sig_dis = col_name_dis)
reg.ss.vars <- c("restaurant_nn", "rst_sig_dis","road_nn", "road_sig_dis","watr_nn", "wtr_sig_dis",'avg_pop','sum_pop')
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "uniqueID",
dependentVariable = "count",
indVariables = reg.ss.vars) %>%
dplyr::select(uniqueID, count, Prediction, geometry)
error_by_reg_and_fold <-
reg.ss.spatialCV %>%
group_by(uniqueID) %>%
summarize(Mean_Error = mean(Prediction - count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
arrange(desc(MAE))
error_by_reg_and_fold %>%
arrange(MAE)
error_by_reg_and_fold %>%
ggplot(aes(MAE)) +
geom_histogram(bins = 100, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
labs(title="Distribution of MAE", subtitle = "LOGO-CV",
x="Mean Absolute Error", y="Count")
error_by_reg_and_fold <-
reg.ss.spatialCV %>%
group_by(uniqueID) %>%
summarize(Mean_Error = mean(Prediction - count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
arrange(desc(MAE))
error_by_reg_and_fold %>%
arrange(MAE)
error_by_reg_and_fold %>% filter(MAE <= 10)%>%
ggplot(aes(MAE)) +
geom_histogram(bins = 100, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
labs(title="Distribution of MAE", subtitle = "LOGO-CV",
x="Mean Absolute Error", y="Count")
error_visual(reg.ss.spatialCV)
risk_visualize(reg.ss.spatialCV,litter_p)
View(visual_count_net)
View(avg_pop)
ggplot() +
geom_sf(data = avg_pop, aes(fill = avg_pop), color = NA) +
scale_fill_viridis() +
labs(title = paste(variable_name,"count for the fishnet")) +
mapTheme()
grid.arrange(
ggplot() +
geom_sf(data = avg_pop, aes(fill = avg_pop), color = NA) +
scale_fill_viridis() +
labs(title = 'Average Pop for the fishnet') +
mapTheme(),
ggplot() +
geom_sf(data = sum_pop, aes(fill = sum_pop), color = NA) +
scale_fill_viridis() +
labs(title = 'Total Pop for the fishnet') +
mapTheme(),)
grid.arrange(
ggplot() +
geom_sf(data = avg_pop, aes(fill = avg_pop), color = NA) +
scale_fill_viridis() +
labs(title = 'Average Pop for the fishnet') +
mapTheme(),
ggplot() +
geom_sf(data = sum_pop, aes(fill = sum_pop), color = NA) +
scale_fill_viridis() +
labs(title = 'Total Pop for the fishnet') +
mapTheme(),
nrow=1)
chisq.test(final_net$count,final_net$avg_pop)
chisq.test(final_net$count,final_net$sum_pop)
chisq.test(final_net$restaurant_nn,final_net$sum_pop)
reg.ss.vars <- c("restaurant_nn", "rst_sig_dis","road_nn", "road_sig_dis","watr_nn", "wtr_sig_dis",'sum_pop')
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "uniqueID",
dependentVariable = "count",
indVariables = reg.ss.vars) %>%
dplyr::select(uniqueID, count, Prediction, geometry)
error_by_reg_and_fold <-
reg.ss.spatialCV %>%
group_by(uniqueID) %>%
summarize(Mean_Error = mean(Prediction - count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
arrange(desc(MAE))
error_by_reg_and_fold %>%
arrange(MAE)
error_by_reg_and_fold %>% filter(MAE <= 10)%>%
ggplot(aes(MAE)) +
geom_histogram(bins = 100, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
labs(title="Distribution of MAE", subtitle = "LOGO-CV",
x="Mean Absolute Error", y="Count")
risk_visualize(reg.ss.spatialCV,litter_p)
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'sum_pop')
local_morans_ap <- localmoran(final_net$avg_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'avg_pop')
local_morans_sp <- localmoran(final_net$sum_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_sp,final_net,'sum_pop')
local_morans_ap <- localmoran(final_net$avg_pop, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
lc_mr_visual(local_morans_ap,final_net,'avg_pop')
chisq.test(final_net$count,local_morans_sp$`Pr(z != E(Ii))`)
error_by_reg_and_fold <-
reg.ss.spatialCV %>%
group_by(uniqueID) %>%
summarize(Mean_Error = mean(Prediction - count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
arrange(desc(MAE))
error_by_reg_and_fold %>%
arrange(MAE)
error_by_reg_and_fold %>% filter(MAE <= 10)%>%
ggplot(aes(MAE)) +
geom_histogram(bins = 100, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
labs(title="Distribution of MAE", subtitle = "LOGO-CV",
x="Mean Absolute Error", y="Count")
reg.ss.vars <- c("restaurant_nn", "rst_sig_dis","road_nn", "road_sig_dis","watr_nn", "wtr_sig_dis")
## RUN REGRESSIONS
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "uniqueID",
dependentVariable = "count",
indVariables = reg.ss.vars) %>%
dplyr::select(uniqueID, count, Prediction, geometry)
error_by_reg_and_fold <-
reg.ss.spatialCV %>%
group_by(uniqueID) %>%
summarize(Mean_Error = mean(Prediction - count, na.rm = T),
MAE = mean(abs(Mean_Error), na.rm = T),
SD_MAE = mean(abs(Mean_Error), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
arrange(desc(MAE))
error_by_reg_and_fold %>%
arrange(MAE)
error_by_reg_and_fold %>% filter(MAE <= 10)%>%
ggplot(aes(MAE)) +
geom_histogram(bins = 100, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
labs(title="Distribution of MAE", subtitle = "LOGO-CV",
x="Mean Absolute Error", y="Count")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
install.packages("knitr")
install.packages("ggplot2", "RCurl", "osmdata", "randomforest")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(osmdata)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(osmdata)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(osmdata)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(osmdata)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
st_c    <- st_coordinates
st_coid <- st_centroid
palette6 <- c("#264653","#2a9d8f",'#8AB17D',"#e9c46a",'#f4a261',"#e76f51")
palette5 <- c("#264653","#2a9d8f","#e9c46a",'#f4a261',"#e76f51")
palette4 <- c("#264653","#2a9d8f","#e9c46a","#e76f51")
palette2 <- c("#264653","#2a9d8f")
