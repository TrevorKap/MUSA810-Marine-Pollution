# input of function:
# city: name of city
load_city_kml_meter <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 32643, agr = "constant")
return(kml_data)
}
load_city_kml <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url)%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
return(kml_data)
}
load_city_kml_meter <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 32643, agr = "constant")
return(kml_data)
}
bd_data_list <- lapply(cities, load_city_kml)
city_data_list <- lapply(cities, load_city_data)
city_data_list <- lapply(cities, load_city_data)
# Assign city names to the list elements
names(city_data_list) <- cities
bd_data_list <- lapply(cities, load_city_kml)
bd_data_list <- lapply(cities, load_city_kml)
bd_data_list <- lapply(cities, load_city_kml)
names(bd_data_list) <- bd
bd_data_meter_list <- lapply(cities, load_city_kml_meter)
bd_M <- c("Bangkok_bdM", "Can_Tho_bdM", "Chennai_bdM", "Melaka_bdM", "Mumbai_bdM", "Panama_City_bdM",
"Pune_bdM", "Salvador_bdM", "Santa_Fe_bdM", "Santiago_bdM", "Semarang_bdM", "Surat_bdM")
bdM <- c("Bangkok_bdM", "Can_Tho_bdM", "Chennai_bdM", "Melaka_bdM", "Mumbai_bdM", "Panama_City_bdM",
"Pune_bdM", "Salvador_bdM", "Santa_Fe_bdM", "Santiago_bdM", "Semarang_bdM", "Surat_bdM")
names(bd_data_meter_list) <- bdM
#input: mdt file
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
return(final_net)
}
final_net_list <- mapply(final_net, city_litter_list, bd_list, bd_meter_list, SIMPLIFY = FALSE)
final_net_list <- mapply(final_net, city_data_list, bd_list, bd_meter_list, SIMPLIFY = FALSE)
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_meter_list, SIMPLIFY = FALSE)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("remotes")
#remotes::install_github("IREA-CNR-MI/sprawl")
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
library(tidygraph)
for (i in seq_along(bd_data_list)) {
bbox <- st_bbox(bd_data_list[[i]])
cat("Bounding box for", names(bd_data_list)[i], ":\n")
print(bbox)
}
load_city_kml <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url)%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
return(kml_data)
}
bd_data_list <- lapply(cities, load_city_kml)
bd_data_list <- lapply(cities, load_city_kml)
names(bd_data_list) <- bd
#input: mdt file
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
return(final_net)
}
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_meter_list, SIMPLIFY = FALSE)
test <- final_net(city_data_list[1], bd_data_list[1], bd_data_meter_list[1])
test <- final_net(city_data_list[[1]], bd_data_list[[1]], bd_data_meter_list[[1]])
test <- final_net(city_data_list[[2]], bd_data_list[[2]], bd_data_meter_list[[2]])
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
test <- final_net(city_data_list[[4]], bd_data_list[[4]], bd_data_meter_list[[4]])
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read.csv(url)
data <- st_read(data)%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
return(data)
}
city_data_list <- lapply(cities, load_city_data)
return(data)
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- st_read(url)
return(data)
}
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
data$latitude <- as.numeric(data$latitude)
data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
return(data_sf)
}
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
# data$latitude <- as.numeric(data$latitude)
# data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
return(data_sf)
}
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
# data$latitude <- as.numeric(data$latitude)
# data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
return(data_sf)
}
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
return(final_net)
}
test <- final_net(city_data_list[[4]], bd_data_list[[4]], bd_data_meter_list[[4]])
View(bd_data_meter_list)
View(city_data_list)
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_meter_list, SIMPLIFY = FALSE)
test <- final_net(city_data_list[[4]], bd_data_list[[4]], bd_data_meter_list[[4]])
test <- final_net(city_data_list[[2]], bd_data_list[[2]], bd_data_meter_list[[2]])
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
library(tidygraph)
library(XML)
library(neuralnet)
library(MASS)
library(tidymodels)
library(jsonlite)
library(QuickJSR)
library(hash)
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
source('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/function_UO.R')
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
data$latitude <- as.numeric(data$latitude)
data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
return(data_sf)
}
# load_city_kml:
# input of function:
# city: name of city
load_city_kml <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url)%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
return(kml_data)
}
# load_city_kml_meter:
# input of function:
# city: name of city
load_city_kml_meter <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 32643, agr = "constant")
return(kml_data)
}
st_c    <- st_coordinates
st_coid <- st_centroid
#lists!
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
bd <- c("Bangkok_bd", "Can_Tho_bd", "Chennai_bd", "Melaka_bd", "Mumbai_bd", "Panama_City_bd", "Pune_bd", "Salvador_bd", "Santa_Fe_bd", "Santiago_bd", "Semarang_bd", "Surat_bd")
bdM <- c("Bangkok_bdM", "Can_Tho_bdM", "Chennai_bdM", "Melaka_bdM", "Mumbai_bdM", "Panama_City_bdM","Pune_bdM", "Salvador_bdM", "Santa_Fe_bdM", "Santiago_bdM", "Semarang_bdM", "Surat_bdM")
# pre-store of osm data need to use
# a more expandable version of function
# the actual store order is cate label, small cate
stor_df <- data.frame(cato = character(), small =list(), label = character(),stringsAsFactors = FALSE)
stor_df <- add_row('water',list(c('canal','drain','ditch')), 'water')
stor_df <- add_row('amenity',list(c('waste_basket','waste_disposal','waste_transfer_station','recycling')), 'waste')
stor_df <- add_row('highway',list('residential'), 'road')
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
bd_data_list <- lapply(cities, load_city_kml)
names(bd_data_list) <- bd
bd_data_meter_list <- lapply(cities, load_city_kml_meter)
bd_data_meter_list <- lapply(cities, load_city_kml_meter)
names(bd_data_meter_list) <- bdM
#input: mdt file
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
return(final_net)
}
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_meter_list, SIMPLIFY = FALSE)
test <- final_net(city_data_list[[2]], bd_data_list[[2]], bd_data_meter_list[[2]])
list2env(final_net_list, envir = .GlobalEnv)
str(city_data_list[[1]])
print(st_bbox(city_data_list[[1]]))
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
kml_data <- st_read(kml_url) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform('EPSG:32643')
load_city_kml_meter <- function(city) {
kml_url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/", city, ".kml")
kml_data <- st_read(kml_url) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform('EPSG:32643')
return(kml_data)
}
bd_data_meter_list <- lapply(cities, load_city_kml_meter)
bd_data_meter_list <- lapply(cities, load_city_kml_meter)
names(bd_data_meter_list) <- bdM
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_list, SIMPLIFY = FALSE)
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
final_net <- st_transform(final_net, crs = 4326)
return(final_net)
}
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_list, SIMPLIFY = FALSE)
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
data$latitude <- as.numeric(data$latitude)
data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"),crs = 4326, agr = "constant")%>%
st_transform('EPSG:32643')
return(data_sf)
}
load_city_data <- function(city) {
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
data <- read_csv(url)
# Convert latitude and longitude columns to numeric
data$latitude <- as.numeric(data$latitude)
data$longitude <- as.numeric(data$longitude)
# Create spatial object
data_sf <- st_as_sf(data, coords = c("longitude", "latitude"),crs = 4326, agr = "constant")%>%
st_transform('EPSG:32643')
return(data_sf)
}
city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
final_net_list <- mapply(final_net, city_data_list, bd_data_list, bd_data_list, SIMPLIFY = FALSE)
test <- final_net(city_data_list[[3]], bd_data_list[[3]], bd_data_meter_list[[3]])
city_data_list[[3]]
litter_p <- city_data_list[[3]] %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd_data_list[[3]])
temp_fish <- create_fish(bd_data_meter_list[[3]])
final_net <- countfishnet(temp_fish, city_data_list[[3]])
final_net <- moran_gen(final_net,stor_df)
View(moran_gen)
View(final_net)
final_net <- pn_gen(stor_df)
final_net <- pn_gen(stor_df)
for (i in seq_along(city_data_list)) {
city_litter <- city_data_list[[i]]
bd <- bd_data_list[[i]]
bd_meter <- bd_data_meter_list[[i]]
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
final_net <- st_transform(final_net, crs = 4326)
final_net_list[[i]] <- final_net
}
#fishnet
temp_bbox <- get_bbox(bd_data_list[[3]])
temp_fish <- create_fish(bd_data_meter_list[[3]])
final_net <- countfishnet(temp_fish, city_data_list[[3]])
final_net <- pn_gen(stor_df)
final_net <- pn_gen(stor_df)
final_net <- pn_gen(stor_df)
View(pn_gen)
tw_p <- point_data(temp_bbox,stor_df[1,1],unlist(stor_df[1,3]),stor_df[1,2])
View(point_data)
stor_df <- add_row('water',list(c('canal','drain','ditch')), 'water')
stor_df <- add_row('amenity',list(c('restaurant','pub','bar')), 'restaurant')
stor_df <- add_row('highway',list('residential'), 'road')
stor_df <- add_row('water',list(c('canal','drain','ditch')), 'water')
add_row <-function(cato,small,label){
new_row <- list(cato = cato, small = small, label = label)
stor_df <- bind_rows(stor_df, new_row)
return(stor_df)
}
stor_df <- add_row('water',list(c('canal','drain','ditch')), 'water')
stor_df <- add_row('amenity',list(c('waste_basket','waste_disposal','waste_transfer_station','recycling')), 'waste')
stor_df <- add_row('amenity',list(c('restaurant','pub','bar')), 'restaurant')
stor_df <- add_row('highway',list('residential'), 'road')
stor_df <- add_row('landuse',list('industrial'), 'industrial')
stor_df <- add_row('landuse',list('residential'), 'residential')
stor_df <- add_row('landuse',list('retail'), 'retail')
final_net <- pn_gen(stor_df)
final_net <- function(city_litter, bd, bd_meter) {
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
final_net <- moran_gen(final_net,stor_df)
final_net <- st_transform(final_net, crs = 4326)
return(final_net)
}
for (i in seq_along(city_data_list)) {
city_litter <- city_data_list[[i]]
bd <- bd_data_list[[i]]
bd_meter <- bd_data_meter_list[[i]]
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
Sys.sleep(2)
final_net <- moran_gen(final_net,stor_df)
Sys.sleep(5)
final_net <- st_transform(final_net, crs = 4326)
final_net_list[[i]] <- final_net
}
final_net_list <- list()
for (i in seq_along(city_data_list)) {
city_litter <- city_data_list[[i]]
bd <- bd_data_list[[i]]
bd_meter <- bd_data_meter_list[[i]]
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
Sys.sleep(2)
final_net <- moran_gen(final_net,stor_df)
Sys.sleep(5)
final_net <- st_transform(final_net, crs = 4326)
final_net_list[[i]] <- final_net
}
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
library(FNN)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("remotes")
#remotes::install_github("IREA-CNR-MI/sprawl")
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(classInt)
library(RCurl)
library(httr)
library(osmdata)
library(randomForest)
#library(tidygraph)
library(XML)
library(neuralnet)
library(MASS)
#library(tidymodels)
library(brms)
for (i in seq_along(city_data_list)) {
city_litter <- city_data_list[[i]]
bd <- bd_data_list[[i]]
bd_meter <- bd_data_meter_list[[i]]
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
Sys.sleep(2)
final_net <- moran_gen(final_net,stor_df)
Sys.sleep(5)
final_net <- st_transform(final_net, crs = 4326)
final_net_list[[i]] <- final_net
}
for (i in seq_along(city_data_list)) {
city_litter <- city_data_list[[i]]
bd <- bd_data_list[[i]]
bd_meter <- bd_data_meter_list[[i]]
litter_p <- city_litter %>%
filter(master_material == 'PLASTIC') %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
litter_p <- subset(litter_p, select = -c(event_name, project_name))
#fishnet
temp_bbox <- get_bbox(bd)
temp_fish <- create_fish(bd_meter)
final_net <- countfishnet(temp_fish, litter_p)
final_net <- pn_gen(stor_df)
Sys.sleep(2)
final_net <- moran_gen(final_net,stor_df)
Sys.sleep(5)
final_net <- st_transform(final_net, crs = 4326)
final_net_list[[i]] <- final_net
}
