mutate(uniqueID = 1:n())
fishnet <-
st_make_grid(bdry,
cellsize = 500,
square = TRUE) %>%
.[bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
city <- getbb(place_name = "Panama City", format_out = "polygon") # not used
bb_df <- getbb(place_name = "Panama City Panama", format_out = "data.frame") # get chennai boundary
bdry <- bb_df$boundingbox # extract the geoemtry part
bdry
bd <- c(-79.3741802, 9.1314493, -79.6941802, 8.8114493)
# just a record
# 4,2,3 1 in northern hemisphere
city <- st_bbox(city, crs = 4326) # create a bbox
city <- getbb(place_name = "Panama City", format_out = "polygon") # not used
bb_df <- getbb(place_name = "Panama City Panama", format_out = "data.frame") # get chennai boundary
bdry <- bb_df$boundingbox # extract the geoemtry part
bdry
bd <- c(-79.3741802, 9.1314493, -79.6941802, 8.8114493)
# just a record
# 4,2,3 1 in northern hemisphere
bd <- st_bbox(bd, crs = 4326) # create a bbox
# create fishnet of city boundary
fishnet <-
st_make_grid(bdry,
cellsize = 500,
square = TRUE) %>%
.[bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
fishnet <-
st_make_grid(bd,
cellsize = 500,
square = TRUE) %>%
.[bd] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
# load litter data
litter <- read.csv('https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-dataPanama.csv')
# data filter and projection transformation
litter_p <- litter%>%
filter(master_material == 'PLASTIC')%>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")%>%
st_transform('EPSG:32643')
litter_p <- subset(litter_p, select = -c(event_name, project_name))
# load boundary data
## ATTENTION! this part should be the boundry of YOUR CITY
mumb_bdry <- st_read('C:/Users/Owner/Downloads/Santiago__Parcel_Boundaries/Santiago_Parcel_Boundaries.shp')
mumb_bdry <- st_set_crs(mumb_bdry, 4326)%>%
st_transform('EPSG:32643')
## ATTENTION! if this part not work, it's totally fine, you can just grab the bbox data in google map
city <- getbb(place_name = "Panama City", format_out = "polygon") # not used
bb_df <- getbb(place_name = "Panama City Panama", format_out = "data.frame") # get chennai boundary
bdry <- bb_df$boundingbox # extract the geoemtry part
bdry
bd <- c(-79.3741802, 9.1314493, -79.6941802, 8.8114493)
# just a record
# 4,2,3 1 in northern hemisphere
bd <- st_bbox(bd, crs = 4326) # create a bbox
# create fishnet of city boundary
fishnet <-
st_make_grid(bd,
cellsize = 500,
square = TRUE) %>%
.[bd] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
bd <- c(-79.3741802, 9.1314493, -79.6941802, 8.8114493)
bd <- st_bbox(bd, crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
bd <- st_bbox(c(-79.3741802, 9.1314493, -79.6941802, 8.8114493), crs = 4326)
fishnet <-
st_make_grid(bd,
cellsize = 500,
square = TRUE) %>%
.[bd] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
fishnet <-
st_make_grid(bdry,
cellsize = 500,
square = TRUE) %>%
.[bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
bd <- st_bbox(bdry, crs = 4326) # create a bbox
bb_df <- getbb(place_name = "Panama City Panama", format_out = "polygon")
bd <- st_bbox(bdry, crs = 4326) # create a bbox
View(city)
city <- getbb(place_name = "Panama City", format_out = "polygon") %>%
st_transform('ESRI:102271')
city <- getbb(place_name = "Panama City", format_out = "polygon")
bb_df <- getbb(place_name = "Panama City Panama", format_out = "data.frame")
bdry <- bb_df$boundingbox # extract the geoemtry part
bdry
# just a record
# 4,2,3 1 in northern hemisphere
bd <- st_bbox(bdry, crs = 4326) # create a bbox
bdry
bdry <- st_as_sfc(bdry, crs = 4326)
city <- getbb(place_name = "Panama City Panama", format_out = "polygon")  # not used
bb_df <- getbb(place_name = "Panama City Panama", format_out = "data.frame") # get chennai boundary
bdry <- bb_df$boundingbox # extract the geoemtry part
bdry
bdry <- st_as_sfc(bdry, crs = 4326)
View(city)
fishnet <-
st_make_grid(bdry,
cellsize = 500,
square = TRUE) %>%
.[bdry] %>%
st_sf() %>%
mutate(uniqueID = 1:n())
View(bdry)
View(mumb_bdry)
cities <- c("Bangkok", "Can Tho", "Chennai", "Melacca", "Mumbai", "Panama City",
"Pune", "Salvador", "Santa Fe", "Santiago", "Semarang", "Surat")
directory <- "/Data/"
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path(directory, paste0("mdt-data", city, ".csv"))
# Check if the file exists
if (file.exists(file_path)) {
# Load the CSV file as a data frame
data <- read.csv(file_path)
return(data)
} else {
message(paste("File not found for", city))
return(NULL)
}
}
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melacca", "Mumbai", "Panama City",
"Pune", "Salvador", "Santa Fe", "Santiago", "Semarang", "Surat")
# Run the function for each city
for (city in cities) {
# Load data for the city
city_data <- load_city_data(city, epsg = NULL)  # You can specify EPSG code here if needed
# Assign the data frame to a variable with the city name
assign(paste0("data_", city), city_data)
}
# Create an empty list to store the data frames
city_data_list <- list()
# Run the function for each city
for (city in cities) {
# Load data for the city
city_data <- load_city_data(city, epsg = NULL)  # You can specify EPSG code here if needed
# Store the data frame in the list
city_data_list[[city]] <- city_data
}
file_path <- file.path(directory, paste0("mdt-data", city, ".csv"))
directory <- "/Data"
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path(directory, paste0("mdt-data", city, ".csv"))
# Check if the file exists
if (file.exists(file_path)) {
# Load the CSV file as a data frame
data <- read.csv(file_path)
return(data)
} else {
message(paste("File not found for", city))
return(NULL)
}
}
file_path <- file.path(directory, paste0("mdt-data", city, ".csv"))
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path(directory, paste0("mdt-data", city, ".csv"))
# Check if the file exists
if (file.exists(file_path)) {
# Load the CSV file as a data frame
data <- read.csv(file_path)
return(data)
} else {
message(paste("File not found for", city))
return(NULL)
}
}
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melacca", "Mumbai", "Panama City",
"Pune", "Salvador", "Santa Fe", "Santiago", "Semarang", "Surat")
# Create an empty list to store the data frames
city_data_list <- list()
# Run the function for each city
for (city in cities) {
# Load data for the city
city_data <- load_city_data(city, epsg = NULL)  # You can specify EPSG code here if needed
# Store the data frame in the list
city_data_list[[city]] <- city_data
}
# Load data for the city
city_data <- load_city_data(city)  # You can specify EPSG code here if needed
# Run the function for each city
for (city in cities) {
# Load data for the city
city_data <- load_city_data(city)  # You can specify EPSG code here if needed
# Store the data frame in the list
city_data_list[[city]] <- city_data
}
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv"))
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melacca", "Mumbai", "Panama City",
"Pune", "Salvador", "Santa Fe", "Santiago", "Semarang", "Surat")
# Create an empty list to store the data frames
city_data_list <- list()
# Run the function for each city
for (city in cities) {
# Load data for the city
city_data <- load_city_data(city)  # You can specify EPSG code here if needed
# Store the data frame in the list
city_data_list[[city]] <- city_data
}
test_data <- load_city_data(Melacca)
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv"))
test_data <- load_city_data(Melacca)
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv"))
test_data <- load_city_data(Melacca)
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melacca", "Mumbai", "Panama City",
"Pune", "Salvador", "Santa Fe", "Santiago", "Semarang", "Surat")
test_data <- load_city_data(Melacca)
# Check if the file exists
if (file.exists(file_path)) {
# Load the CSV file as a data frame
data <- read.csv(file_path)
return(data)
} else {
message(paste("File not found for", city))
return(NULL)
}
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the file path for the city
file_path <- file.path("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv"))
# Function to load CSV files for each city and convert to data frame
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
test_data <- load_city_data(Melacca)
test_data <- load_city_data("Melacca")
test_data <- load_city_data("Melaka")
city_data_list <- lapply(cities, load_city_data)
cities <- c(Bangkok, Can_Tho, Chennai, Melaka, Mumbai, Panama_City,
Pune, Salvador, Santa_Fe, Santiago, Semarang, Surat)
cities <- c(Bangkok, Can_Tho, Chennai, Melaka, Mumbai, Panama_City,
Pune, Salvador, Santa_Fe, Santiago, Semarang, Surat)
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
test_data <- load_city_data("Melaka")
# List of cities
cities <- c("Bangkok", "Can Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
city_data_list <- lapply(cities, load_city_data)
# Print the list of data frames
print(city_data_list)
list2env(city_data_list, envir = .GlobalEnv)
# Assign city names to the list elements
names(city_data_list) <- cities
# Convert the list of data frames to separate objects in the global environment
list2env(city_data_list, envir = .GlobalEnv)
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
# Assign city names to the list elements
names(city_data_list) <- cities
# Convert the list of data frames to separate objects in the global environment
list2env(city_data_list, envir = .GlobalEnv)
View(Melaka)
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
test_data <- load_city_data("Melaka")
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
# Convert the list of data frames to separate objects in the global environment
list2env(city_data_list, envir = .GlobalEnv)
combined_data <- do.call(rbind, city_data_list)
sapply(combined_data, unique)
View(combined_data)
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
# Assign city names to the list elements
names(city_data_list) <- cities
# Convert the list of data frames to separate objects in the global environment
list2env(city_data_list, envir = .GlobalEnv)
combined_data <- do.call(rbind, city_data_list)
sapply(combined_data, unique)
View(combined_data)
unique(combined_data$material)
unique(combined_data$material)
unique(combined_data$master_item_name)
unique(combined_data$master_material)
library(tidyverse)
library(dplyr)
unique(combined_data$master_material)
unique(combined_data$master_item_name)
unique(combined_data$master_item_name)
unique(combined_data$master_material)
unique(combined_data$material)
unique(combined_data$master_material)
combined_data <- combined_data %>%
mutate(Type = case_when(
master_material == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER") ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
combined_data <- combined_data %>%
mutate(Type = case_when(
master_material == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER", "PLASTIC") ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
combined_data <- combined_data %>%
mutate(Type = case_when(
master_material == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER", "PLASTIC") ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
combined_data <- combined_data %>%
mutate(Type = case_when(
master_item_name == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER", "PLASTIC") ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material == "METAL" ~ "Metal",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
combined_data <- combined_data %>%
mutate(Type = case_when(
master_item_name == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER") ~ "Plastic",
master_material == "PLASTIC" ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material == "METAL" ~ "Metal",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
sum(is.na(combined_data$Type))
print(table(combined_data$Type))
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
city_data_list <- lapply(cities, load_city_data)
for (city in names(city_data_list)) {
# Add a new column 'City' with the city name
city_data_list[[city]]$City <- city
}
# Add a new column 'City' with the city name
city_data_list[[city]]$City <- rep(city, nrow(city_data_list[[city]]))
# Assign city names to the list elements
names(city_data_list) <- cities
# Add a new column 'City' with the city name
city_data_list[[city]]$City <- rep(city, nrow(city_data_list[[city]]))
return(data)
city_data_list <- lapply(cities, load_city_data) {
data$City <- city
city_data_list <- lapply(cities, function(city) {
data <- load_city_data(city)
data$City <- city
return(data)
})
# Assign city names to the list elements
names(city_data_list) <- cities
load_city_data <- function(city) {
# Construct the URL for the city data
url <- paste0("https://raw.githubusercontent.com/TrevorKap/MUSA810-Marine-Pollution/main/Data/mdt-data", city, ".csv")
# Load the CSV file from the URL as a data frame
data <- read.csv(url)
# Return the data frame
return(data)
}
# List of cities
cities <- c("Bangkok", "Can_Tho", "Chennai", "Melaka", "Mumbai", "Panama_City",
"Pune", "Salvador", "Santa_Fe", "Santiago", "Semarang", "Surat")
#city_data_list <- lapply(cities, load_city_data)
names(city_data_list) <- cities
# Create a list of data frames with city names as data frame names
city_data_list <- lapply(cities, function(city) {
data <- load_city_data(city)
data$City <- city
return(data)
})
# Convert the list of data frames to separate objects in the global environment
list2env(city_data_list, envir = .GlobalEnv)
#library(dplyr)
combined_data <- do.call(rbind, city_data_list)
combined_data <- combined_data %>%
mutate(Type = case_when(
master_item_name == "CIGARETTES/CIGARS" ~ "Cigarette",
master_material %in% c("FISHING GEAR", "RUBBER") ~ "Plastic",
master_material == "PLASTIC" ~ "Plastic",
master_material == "GLASS" ~ "Glass",
master_material == "CLOTH" ~ "Cloth",
master_material == "PAPER & LUMBER" ~ "Paper",
master_material == "METAL" ~ "Metal",
master_material %in% c("LANDMARKS", "NON-LITTER ITEM", "MIXED MATERIALS", "PERSONAL HYGEINE", "OTHER") ~ "Other",
TRUE ~ NA_character_ # Default value if none of the conditions are met
))
sum(is.na(combined_data$Type))
print(table(combined_data$Type))
tidy_combined <- combined_data %>%
group_by(City, Type) %>%
summarize(count = n()) %>%
arrange(City, Type)
View(tidy_combined)
tidy_combined <- combined_data %>%
group_by(City, Type) %>%
summarize(count = n()) %>%
pivot_wider(names_from = Type, values_from = count, values_fill = 0)
library(tidyr)
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(tidyr)
tidy_combined <- combined_data %>%
group_by(City, Type) %>%
summarize(count = n()) %>%
pivot_wider(names_from = Type, values_from = count, values_fill = 0)
